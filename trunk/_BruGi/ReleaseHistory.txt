5.1.2014
Version 50 r207
no functional change in Brugi
* GUI Bugfix at "Save Config to File", ticket#19, https://sourceforge.net/p/brushless-gimbal-brugi/tickets/19/#3d3a

5.1.2014
Version 50 r204
no functional changes
* further code size reduction (28578 bytes) to fit into Arduino Mini w/ ATmega328 boards with max code size = 28672 bytes

29.12.2013
Version 50 r203
no functional changes
* removed some development code (trace options) to reduce codes size by 720 bytes, on some boards code size was exceeded.

26.12.2013
Version 50 r202
* GUI bugfix at fpv roll setting 
* GUI improvements, use textual combobox fields for better readability
* bug fix in fpv freeze mode monitor (trace was missing)

21.12.2013
Version 50 r200

bug fix
* noise on RC input could crash controller, disabled isr re-enable in rc interrupt routines
  (noise is coupled into rc lines from motor drive typically, mainly at higher supply voltage and/or wit low resist motors)

* minor GUI improvements, save parameters are sorted now

17.12.2013
Version 50 r199
new feature (beta)
* FPV freeze mode, this is for light weight gimabls. In this mode motor updates are stopped and the motor drive position is stopped
  During this mode the PWM power can be set separately to increase torque.
  Note: this mode does not work as expected when the motor direction is set to the wrong side, instead the gimbal hops to a wrong position in freeze mode.
  
15.12.2013
Version 50 r198
* added I2C error checks
* GUI improvements 
   - window arrangment should fit MinLaptop 1024x600 screens
     thanks to Sebastiaan Terlouw for the contribution!
   - MPU I2C error and temperature display
   - improved status messages at startup, e.g. if no sensor present

14.12.2013
Version 50 r197
* bug fix: swapXY sensor orientation, yaw gyro direction was wrong, pitch down >45 deg did not work
* GUI windows y size reduced

10.12.2013
Version 50 r196
* bug fix: swapXY sensor orientation had direction conflict between ACC and gyro

10.12.2013
Version 50 r195
new features
* can use analog inputs instead RC, e.g. a potentiometer can be connected, configurable for each input A0/A1/A2
* can switch off any RC input on A0/A1/A2

9.12.2013
Version 50 r194
GUI update, rearranged RC tabs to reduce windows size

7.12.2013
Version 50 r193
GUI blg-tool enhancements
* LiveView feature added, RC channels and switch states are displayed now
* bug fix at line connect

1.12.2013
Version 50 r191
* code cleanup and code size reduction
* unified status message outputs info, warning, error) 
* GUI updates for better status display (GUI work still in progress)

30.11.2013
Version 49 r190
* code size reduction and some cleanup
* rc absolute mode improvement, slight camera movements reduced by a hysteresis on rc channel
* gui allows higher PID settings

29.11.2013
Version 049 r189
* code size reduction and some cleanup
* rc absolute mode improvement, slight camera movements reduced by a hysteresis on rc channel
* gui allows higher PID settings

26.11.2013
Version 049 r189
* new feature, ACC calibration
* gyro calibration stored in eeprom
* gyro calibration can be skipped at startup

Version 049 r188
* changed filter for camera movement in absolute RC mode. Reduced camera acceleration due to high order filtering.

Version 049 r187
* RC detection improvements, read micros timer earlier in isr. RC noise should be reduced

Version 049 r186
* bug fix in rc reception, re-entrant pin interrupt caused interference between pwm and ppm modes

Version 049 r185
* free some processing slots at readACC (thanks to Michi)

10.11.2013
Version 049 r184
* free some processing slots at readACC (thanks to Michi)

10.11.2013
Version 049 r184
fixed misc startup issues
* IMU attitude could hang at wrong position, under certain conditions
* motors were switched on to early with bad drive values
* extended time for gyro calibration
r183
bug fix at gyro recalibration, thanks to micha-24 for the hint

r182
minor update
  GUI screenshots added/update
  angleOffset configuration more smooth

7.11.2013
Version 049 r181
preparations for improved data view in GUI
  * added fTrace and sTrace control parameters, provides more live data for easier setup
  * accOutput parameter is obsolete
to do: GUI data display for RC channels, etc.

Notes: GUI is not compatible to previous version
  EEPROM is initialized

r180
* added FPV mode on pitch and roll, can be configured independently, requires rc input from flight control
 * removed obsolete parameter mpuLPF
 * fixes in rc reception, should run more smoothly 
 * GUI tabs re-arranged
open issues:
  GUI should visualize rc channels and switch functions for easier setup
  documentation

1.11.2013
r178
trace option added, for debug purposes
updates:
  * GUI updated, added AUX Tab
  * minor RC bug fixes, RC valid pulse width 900/2100us, nominal still 1000/1500/2000us
  * IMU Acc Magnitude filter cleanup
  * removed obsolete OAC command
Important Note: EEPROM will be initialized, save settings before update

r177
RC improvements, both ppm and pwm mode can be selected independently for roll/pitch/aux channels

29.10.2013
r175
replaced arduino standard timer0 timing functions by dedicated functions on timer1. Due to reduced interrupt activity we have about 400usec headroom per sample period. This change has no functional impact.

27.10.2013
r174
RC mode has been separated for pitch and roll now (rc absolute and rc proportional can be mixed).
Note: due to new parameters the eeprom will be initialized. Save settings in file in previous GUI and restore with current GUI. Check RC absolute and RC LPF settings, those will have default settings. 

r172
fix wrong dT calculation in PID D component, fix has no functional impact (as long dT is constant)

23.8.2013
r171
timing fixes and code cleanup
* fixed motor update timing, was delayed by one cycle compared to r161, moved PWM counter update to ISR to ensure common update of all 3 phases
* serial command cleanup, removed old commands, reduced code size and ram usage
* show release string 
* GUI update, not complete (fpv freeze and RC switch function still not included)

18.7.2013
r169
new features
* separate RC auxiliary switches for acitvating FPV/Freeze mode on Pitch and Roll
* separate RC auxiliary switch to select an alternate ACC time constant
(GUI not yet updated)

r168
* added RC auxiliary channel (rc switch)
* minor correction: DT constant is 2048us instead 2000us (488Hz instead 500Hz)

17.7.2013
r167
added cutoffVoltage parameter
GUI update

12.7.2013
r166
new feature:
* compensate battery voltage change by motor power control
  NOTE: hardware patch is required, add a voltage divider from Ubat to A3 (MULTI) input
        (R1=10k, R2=2.2k, N=1/5.55)
  new command: SBV (set battery voltage)
  new parameters: refVoltageBat and motorPowerScale
Note: blg-tool.tcl not updated yet

r165
* refined and optimized loop timing for 500Hz
* preparation for motor power scaling depending on Ubat
* some cleanup

r164
update of meister's blg-tool.exe
* load paramters from file ist working now
* chart display visible on all screens 

r163
* fixed range problem > 16-bit for angle offset in IMU.ino

28.6.2013
Version 049 r161

please note that EEPROM configuration is lost and re-initialized when upgrading to this version. 

Fixes
* fixed acc initialization issue
  accMag calculation used uninitialized value
* added CRC checks to EEPROM structure
* new config versEEPROM, eeprom is initialized when versEEPROM changes

RC improvements
* A0 pin can be used as RC input Ch3 now (beside A1 and A2)
* RCmin and RCmax are not constrained any more, they can be set independent from
each other.
   - in Absolute Mode: RC direction can be changed by sign change of RCmin/RCmax
   - in Relative Mode: RC direction can be changed by choosing RCgain negative.
RCmin/RCmax act as angle limits
* corrected scale of config.angleOffsetRoll and config.angleOffsetPitch (x 10)

23.6.2013
Version 049 r156
* new config versEEPROM, eeprom is initialized when versEEPROM changes
* added CRC checks to EEPROM structure

22.6.2013
Version 049 r155
RCmin and RCmax are not constrained any more, they can be set independent from each other.
 * in Absolute Mode: RC direction can be changed by sign change of RCmin/RCmax
 * in Relative Mode: RC direction can be changed by choosing RCgain negative. RCmin/RCmax act as angle limits
 
20.6.2013
Version 049 r153
fixed acc initialization issues
accMag calculation used uninitialized value

15.6.2013
Version 049 r152
minor bug fixes
  * accOutput=false when saved to EEPROM_readAnything
  * PID I default value updated

12.6.2013
Version 049 r77
* code size reduction, because some non UNO platforms have flash size issues
  * reworked RC handling and bug fixes (thanks to micha-24 for the contribution)
  * RC channels numbers match AOI naming now
  * GUI help text enhancements
  * reduced control noise, changed PID I scale (by 10)

*******************************
  Important Note for r77
*******************************
  ->  PID I must be divided by 10 for same result
      e.g. instead I=60 use I=6

General Note:
  If you update from earlier versions, EEPROM parameters should be reset to their initial values.
Use console command SD and WE
or in blg_tools GUI "defaults" and "save to flash" 

7.6.2013
049B r69
  * GUI updates by meister
  * minor bug fixes
  * updated release history and readme.txt
	  
3.6.2013	  
049 r61:
- minor bug fix: "par" command did not accept all names 

2.6.2013
049 r58:
IMPORTANT: a known issue exist in "par" command handling (it does not accept all parameter names)
use 049 r61 instead

* RC improvements
  - support of PPM sum signal
  - rc channel numbers can be assigned to functions separately
  - config for RC low pass filter
  - config for mpu lpf
  - config for gimbal zero positions
* improved gyro calibration, should be more reliable now
* p-value 16-bit overrun fixed
* unified config parameter setting with new "par" command
* minor fixes

28.5.2013
049 r45:
- RC +/-45 degree glitch fixed at pitch, roll still unchanged
- faster lock at startup
- OAC output runs at 25Hz, is same rate as used by 046...
- RC low pass filters have been set slower in absolute mode

23.5.2013
049 r40:
- RC functionality has been refined, runs smoothly now
- gyro calibration improved, still calibration is unprecise occasionally

20.5.2013
049 ALPHA r34:
- major rework, with new IMU calculation and PID controller.
  (the actual numbers for P,I and D have no relation to previous versions, see example screenshots in GUI dir for reference)
- proper handling of camera facing down (pitch 90 deg).
- sensor orientation can be configured (see new command SSO).

open issues are
- RC mode movements not smooth enough.
- RC relative mode not functional.
- GUI needs upgrade by meister :-)


048 B: quite some work
- Refactoring of code to increase maintainability
- Auto detect of MPU address (thanks to meister)
- complete rework of controller algorithm (Alois Hahn, Thanks!)
  P is Proportional gain for Gyro
  D is Damping gain for Gyro
  I is integral gain for ACC Drift compensation and horizon stabilization
  
  Should be way easier to find correct parameters now
  But beware: The numbers for P,D and I have nothing to do with numbers from previous versions

- Gravity weighted Drift compensation
- Reduced floating point operations, main control loop runs now at 1kHz (was 450 to 700Hz)
- new gyro calibration: routine detects movements and starts over as long as the gimbal is not free of movement.
- Switching routine for gyro axes to allow for 90deg view downwards without the gimbal going ape
- reworked RC Control algortihm
- modified and included meisters GUI (again: thanks to Alois Hahn)

To be done: Cleanup of Serial Protocol, Cleanup of TCL GUI, still some issues when looking downward....




047 B:
- internal development Version, not released

046 B: minor bugfixes (actually bugfixes that should have been in 045B)and improvements
- introduce rcGain parameter to influence movement rate over rc controll
- modified and included meisters GUI

045 B: minor bugfixes and improvements, switched to Beta status
- change PID parameters to long int, resolution is still 0.001 (to overcome the 32 limit)
- change resolution for ACC weight to 0.0001 (for better fine tuning)
- modified and included meisters GUI


044 A: 
- add choice between absolute and proportional RC positioning
- add continious angle output for debugging/GUI purposes, toggled by serial command
- add choice between raw ACC and DMP for Horizont stabilization
  (DMP is experimental for now, PIDs have to be changed/lowered)
  (Default is ACC)
- Serial Protocol:
WE    (Writes active config to eeprom)
RE    (Restores values from eeprom to active config)
TC    (transmits all config values in eeprom save order)
SD    (Set Defaults)
SP gyroPitchKp gyroPitchKi gyroPitchKd    (Set PID for Pitch)
SR gyroRollKp gyroRollKi gyroRollKd    (Set PID for Roll)
SA accelWeight    (Set Weight in accelWeight/1000)
SF nPolesMotorPitch nPolesMotorRoll
SE maxPWMmotorPitch maxPWMmotorRoll     (Used for Power limitiation on each motor 255=high, 1=low)
SM dirMotorPitch dirMotorRoll motorNumberPitch motorNumberRoll
GC    (Recalibrates the Gyro Offsets)
TRC   (transmitts RC Config)
SRC minRCPitch maxRCPitch minRCRoll maxRCRoll (angles -90..90)
SCA rcAbsolute (1 = true, RC control is absolute; 0 = false, RC control is proportional)
TCA   (Transmit RC control absolute or not)
UAC useACC (1 = true, ACC; 0 = false, DMP)
TAC   (Transmit ACC status)
OAC accOutput (Toggle Angle output in ACC mode: 1 = true, 0 = false)
ODM dmpOutput  (Toggle Angle output in DMP mode: 1 = true, 0 = false)
HE    (This output)

043 A: 
- introduce RC Channel input :-)
  Use A1 and A2 as PWM input pins for Pitch and Roll, DO NOT CONNECT +5V from REC-Receiver to Controller
- add RC input config to serial protocol  
  Type HE in terminal to see additional Protocol stuff (min max Angles per Axis)
- start Code optimization: atan2 now runs ~2 times faster

042 A: 
- memory optimizations
- reintroduce a way to motor power control (use fixed progmem arrays):
PWM from 1 to 255

041 A: MAJOR UPDATE!!!
- removed "config.h", added serial protocol
-- configurable parameters now stored in eeprom
-- relevant parameters can be changes online now
- Still: floating point math!!!
-CAVEAT only 100%Power for now, was not able to finish that this weekend.

040 A: Test version, not published

039 A: MAJOR REWORK!!!
- Removed usage of DMP completely
- Relay on raw Gyro and raw ACC only! 
Gyro is used at ~1kHz to counter movements, ACC vs set point
is mixed into gyro signal to ensure horizontal camera (IMU) position
- global max PWM duty cycle and Power devider per motor can be configured in config.h 
Hint: lower torque = lower power allows for higher P on Pitch for me.
- code cleanup, removed obsolete stuff.
- 32kHz PWM works now for motor movement updates for up to 8 kHz. 
( No more beeping :-), i dont care for energy loss at the moment )

038 A: Test version, not published

037 A:
- NEW: Motor Power Management. Two Options: 
  -- Fixed max Torque/Power (caveat: 
  -- Lower Torque/Power for slower Movements -> EXPERIMENTAL (removed in 039)
- NEW: Use DMP output for I and D Part in control loop at 100Hz (or 200Hz), use raw Gyro at 500Hz for P-Part 
  -- Caveat: setting the sample rate to 500Hz for gyro screws up the dmp algorithm for now. 
     Some more research required ro configure the mpu correctly.
     Therefore sample rate for gyro is set to 200Hz as well, resulting in loss of accuracy.
  --> Remove choice of DMP/RAW_GYRO
- Code cleanup
- Removed the wiring.c modificitaions, does not work as intented anyway --> back to CC_FACTOR usage
- Moved some definitions from config.h to definitions.h, dont change them for now.
- Switched off Gyro and Accel write to DMP-FIFO, speeding up the code by ~200us per DMP read

036 A:
- Choose between DMP and Raw Gyro Stabilisation
  (Raw Gyro is only a tech demo implementation for now: P controller only, no setpoint)
- Faster Motor routine using uint8_t overflow for counter. Sinus Array length therefore is fixed now to 256.
- Raw Gyro can be filtered with low pass (change alpha below)
- YOU HAVE TO CHANGE wiring.c, see below !!!!
- DOES IT WORK? Well....no fo now.
*/